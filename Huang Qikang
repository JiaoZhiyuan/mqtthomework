import paho.mqtt.client as mqtt
import json
#报警系统实现subcriber和publisher功能
class AlarmSystem:
    def __init__(self, broker, port, topic_data, topic_alert):
        self.broker = broker
        self.port = port
        self.topic_data = topic_data
        self.topic_alert = topic_alert

        self.heart_rate_range = (60, 100)
        self.blood_pressure_range = (90, 120)  # systolic range example
        self.pulse_range = (60, 100)

        self.client = mqtt.Client()
        self.client.on_message = self.on_message

    def connect(self):
        self.client.connect(self.broker, self.port, 60)
        self.client.subscribe(self.topic_data)
        self.client.loop_start()

    def on_message(self, client, userdata, msg):
        data = json.loads(msg.payload)
        alert = self.check_data(data)
        if alert:
            self.publish_alert({"message": alert, "data": data})

    def publish_alert(self, alert):
        self.client.publish(self.topic_alert, json.dumps(alert))

    def check_data(self, data):
        if not self.heart_rate_range[0] <= data["heart_rate"] <= self.heart_rate_range[1]:
            return f"Heart rate out of range: {data['heart_rate']}"
        if not self.blood_pressure_range[0] <= data["blood_pressure_systolic"] <= self.blood_pressure_range[1]:
            return f"Blood pressure out of range: {data['blood_pressure_systolic']}"
        if not self.pulse_range[0] <= data["pulse"] <= self.pulse_range[1]:
            return f"Pulse out of range: {data['pulse']}"
        return None
